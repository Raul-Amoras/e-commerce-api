generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                String          @id @default(uuid())
  name              String
  description       String
  shortDescription  String          @map("short_description")
  price             Float
  createdAt         DateTime        @default(now()) @map("create_at")
  discount          Float?
  categoryId        String          @map("category_id")
  orderItems        OrderItem[]
  category          Category        @relation(fields: [categoryId], references: [id])
  images            ProductImage[]
  reviews           ProductReview[]
  sku               String
  productTag        ProductTag[]
}

model Tag {
  id          String    @id @default(uuid())
  name        String    @unique
  active      Boolean   @default(true)
  productTag        ProductTag[]
}

model ProductTag {
  id          String    @id @default(uuid())
  productId   String      @map("product_id")
  tagId       String      @map("tag_id")
  product     Product     @relation(fields: [productId], references: [id])
  tag         Tag         @relation(fields: [tagId], references: [id])
}

model ProductImage {
  id        String  @id @default(uuid())
  url       String
  productId String  @map("product_id")
  product   Product @relation(fields: [productId], references: [id])
}

model ProductReview {
  id        String  @id @default(uuid())
  rating    Int
  comment   String?
  productId String  @map("product_id")
  userId    String  @map("user_id")
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  active   Boolean   @default(true)
  products Product[]
  url      String
}

model User {
  id            String          @id @default(uuid())
  email         String          @unique
  password      String
  name          String
  orders        Order[]
  productReview ProductReview[]
}

model Order {
  id         String      @id @default(uuid())
  createdAt  DateTime    @default(now()) @map("create_at")
  status     String
  total      Float
  userId     String
  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  productId String  @map("product_id")
  orderId   String  @map("order_id")
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}
